# Copyright (C) 2024 Antmicro
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Pipeline

on:
  workflow_call:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  LANG: en_US.UTF-8
  DEBIAN_FRONTEND: noninteractive
  CARGO_TERM_COLOR: always


jobs:
  generate_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix_gen.outputs.matrix }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: matrix_gen
      name: Generate Matrix
      run: |
        python3 ./ci/generate_matrix.py github ci/matrix.json
        cat $GITHUB_OUTPUT

  Build-Gem5:
    name: Build Gem5
    runs-on: ubuntu-22.04
    container: debian:bullseye

    steps:
    - name: Install dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt -qqy update
        apt install -y git
        apt install -y python3-distutils python3-dev python-is-python3 libtinfo5 build-essential liblapack-dev libblas-dev gfortran
        apt install -y wget python3-pip

        apt install -y scons m4 libgoogle-perftools-dev protobuf-compiler

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build
      shell: bash
      run: |
        pushd gem5
        scons build/RISCV/gem5.debug -j `nproc`
        popd

    - name: Upload Gem5 build
      uses: actions/upload-artifact@v3
      with:
        name: gem5
        path: gem5/build/RISCV/gem5.debug

  Build-XLS:
    name: Build XLS Gem5 Plugin and RLE design
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt -qqy update
        sudo apt install -y python3-distutils python3-dev python-is-python3 libtinfo5 build-essential liblapack-dev libblas-dev gfortran
        sudo apt install -y wget python3-pip

    - name: Install bazel
      run: |
        sudo wget https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64 -O /usr/local/bin/bazel
        sudo chmod +x /usr/local/bin/bazel

    - name: Build XLS Gem5 plugin
      run: |
        pushd xls
        bazel build //xls/simulation/gem5:gem5_xls_plugin //xls/modules/rle:rle_enc_opt_ir
        popd
        cp xls/bazel-bin/xls/simulation/gem5/libgem5_xls_plugin.so libgem5_xls_plugin.so
        cp xls/bazel-bin/xls/modules/rle/rle_enc_opt_ir.opt.ir rle_enc_opt_ir.opt.ir

    - name: Upload Gem5 XLS plugin build
      uses: actions/upload-artifact@v3
      with:
        name: gem5-xls-plugin
        path: libgem5_xls_plugin.so

    - name: Upload RLE IR design
      uses: actions/upload-artifact@v3
      with:
        name: rle-opt-ir
        path: rle_enc_opt_ir.opt.ir

  Test-Gem5:
    name: Test (${{ matrix.platform }} | ${{ matrix.config }})
    needs: [generate_matrix, Build-XLS, Build-Gem5]
    runs-on: ubuntu-22.04
    container: debian:bullseye

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}

    steps:

    - name: Install dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt -qqy update
        apt install -y git
        apt install -y python3-distutils python3-dev python-is-python3 libtinfo5 build-essential liblapack-dev libblas-dev gfortran
        apt install -y wget python3-pip

        apt install -y scons m4 libgoogle-perftools-dev protobuf-compiler

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Download Gem5 build
      uses: actions/download-artifact@v3
      with:
        name: gem5

    - name: Download Gem5 XLS plugin build
      uses: actions/download-artifact@v3
      with:
        name: gem5-xls-plugin

    - name: Download RLE IR design
      uses: actions/download-artifact@v3
      with:
        name: rle-opt-ir

    - name: Compile firmware
      shell: bash
      run: |
        pushd firmware
        source ./ci/get_toolchain.sh
        export PLATFORM="${{ matrix.platform }}"
        export MAKE_CONFIG="${{ matrix.config }}"
        echo Building the firmware PLATFORM: ${PLATFORM}, CONFIG: ${MAKE_CONFIG}
        echo Firmware will be exported as fw/`../ci/generate_fw_name.py`.elf
        make PLATFORM=${PLATFORM} ${MAKE_CONFIG}
        popd

    - name: Test cosimulation
      shell: bash
      run: |
        export TOOLCHAIN_PREFIX=`pwd`/riscv/bin/riscv64-unknown-elf-
        export PLATFORM="${{ matrix.platform }}"
        export MAKE_CONFIG="${{ matrix.config }}"

        mkdir -p gem5/build/RISCV
        mv ./gem5.debug ./gem5/build/RISCV/gem5.debug

        chmod +x libgem5_xls_plugin.so
        chmod +x ./gem5/build/RISCV/gem5.debug

        ./ci/run_response_test.py --simulator gem5 --firmware `realpath firmware/out/${PLATFORM}/fw_${PLATFORM}.elf` --plugin `realpath libgem5_xls_plugin.so`